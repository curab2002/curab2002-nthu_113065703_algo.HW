class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        if (!head || k == 1) return head;

        ListNode dummy(0);
        dummy.next = head;
        ListNode* prevGroupEnd = &dummy;

        while (true) {
            // Step 1: 找到第 k 個節點
            ListNode* groupEnd = prevGroupEnd;
            for (int i = 0; i < k && groupEnd; ++i) {
                groupEnd = groupEnd->next;
            }
            if (!groupEnd) break; // 不足 k 個，結束

            // Step 2: 定位頭尾
            ListNode* groupStart = prevGroupEnd->next;
            ListNode* nextGroupStart = groupEnd->next;

            // Step 3: 斷開鏈結 & 反轉這一段
            groupEnd->next = nullptr;
            ListNode* reversedHead = reverseList(groupStart);

            // Step 4: 接回原鏈結
            prevGroupEnd->next = reversedHead;
            groupStart->next = nextGroupStart;

            // Step 5: 移動到下一組
            prevGroupEnd = groupStart;
        }

        return dummy.next;
    }
private:
    ListNode* reverseList(ListNode* head) {
        ListNode* prev = nullptr;
        ListNode* curr = head;

        while (curr) {
            ListNode* nextNode = curr->next;
            curr->next = prev;
            prev = curr;
            curr = nextNode;
        }

        return prev; // 新 head
    }
};