class Solution {
public:
    int trap(vector<int>& height) {
        int n = height.size(), water = 0;
        stack<int> st;  // 存放索引，對應高度遞減
        for (int i = 0; i < n; ++i) {
            // 當遇到更高的柱子時，出棧並計算水量
            while (!st.empty() && height[i] > height[st.top()]) {
                int mid = st.top(); st.pop();
                if (st.empty()) break;  // 沒有左邊界了
                int left = st.top();
                int width = i - left - 1;
                int h = min(height[left], height[i]) - height[mid];
                water += width * h;
            }
            st.push(i);
        }
        return water;
    }
};