class Solution {
public:
    int jump(vector<int>& nums) {
        int n = nums.size();
        if (n <= 1) return 0; // 只有一個元素時，不需要跳躍

        int jumps = 0, farthest = 0, current_end = 0;

        for (int i = 0; i < n - 1; ++i) {
            farthest = max(farthest, i + nums[i]); // 更新最遠可達範圍

            if (i == current_end) { // 到達當前跳躍範圍的邊界
                jumps++;  
                current_end = farthest; // 擴展新的跳躍範圍

                if (current_end >= n - 1) break; // 若已達終點，提早返回
            }
        }
        return jumps;
    }
};