class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        // 1. 用 unordered_map 統計每個數字的出現次數
        unordered_map<int,int> freq;
        for (int x : nums) {
            freq[x]++;
        }
        
        // 2. 桶排序 (bucket sort)：建立大小為 nums.size()+1 的 buckets
        //    buckets[i] 裝所有「出現次數為 i」的元素
        int n = nums.size();
        vector<vector<int>> buckets(n + 1);
        for (auto& p : freq) {
            int val = p.first;
            int f   = p.second;
            buckets[f].push_back(val);
        }
        
        // 3. 從「出現次數最大」開始，依序把桶裡的元素收進答案，直到收滿 k 個
        vector<int> ans;
        ans.reserve(k);
        
        // i 從 n 迭代到 0（因為出現次數不會超過 n）
        for (int i = n; i >= 0 && (int)ans.size() < k; --i) {
            for (int x : buckets[i]) {
                ans.push_back(x);
                if ((int)ans.size() == k) break;
            }
        }
        
        return ans;   
    }
};